#![warn(clippy::use_self)]

mod generate;
mod parse;

use proc_macro::TokenStream;
use quote::quote;
use syn::parse_macro_input;

#[proc_macro]
pub fn create_named(_input: TokenStream) -> TokenStream {
    generate::create_named().into()
}

#[proc_macro_attribute]
pub fn component(_args: TokenStream, input: TokenStream) -> TokenStream {
    let input = parse_macro_input!(input as syn::ItemFn);
    generate::component(input).into()
}

#[proc_macro]
pub fn element(input: TokenStream) -> TokenStream {
    let input = parse_macro_input!(input as parse::Element);
    generate::element(input).into()
}

// code generated by stardom-codegen

macro_rules! define_tagged {
    ($($name:ident,)*) => {
        $(
            #[proc_macro]
            pub fn $name(input: TokenStream) -> TokenStream {
                let tag = stringify!($name);
                let mut extended= TokenStream::from(quote! { #tag; });
                extended.extend(input);
                let input = parse_macro_input!(extended as parse::Element);
                generate::element(input).into()
            }
        )*
    };
}

include!("include.rs");
