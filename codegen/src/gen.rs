use std::io::{self, Write};

use crate::data::Api;

pub fn stardom_macro_include<W: Write>(mut w: W, api: &Api) -> io::Result<()> {
    writeln!(w, "// File generated by stardom-codegen")?;

    // Constant arrays

    writeln!(w, "\nconst ELEMENTS: &[&str] = &[")?;
    for element in &api.elements {
        writeln!(w, "   \"{}\",", element)?;
    }
    writeln!(w, "];")?;

    writeln!(w, "\nconst ATTRS: &[&str] = &[")?;
    for attr in &api.attributes {
        writeln!(w, "   \"{}\",", attr)?;
    }
    writeln!(w, "];")?;

    writeln!(w, "\nconst EVENTS: &[(&str, &str)] = &[")?;
    for (interface, names) in &api.events {
        for name in names {
            writeln!(w, "   (\"{}\", \"{}\"),", name, interface)?;
        }
    }
    writeln!(w, "];")?;

    // External macros

    writeln!(w, "\ndefine_elements! {{")?;
    for element in &api.elements {
        writeln!(w, "    {},", element)?;
    }
    writeln!(w, "}}")?;

    Ok(())
}
